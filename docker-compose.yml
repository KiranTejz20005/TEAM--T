version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: finmda-postgres
    environment:
      POSTGRES_DB: finmda_bot
      POSTGRES_USER: finmda_user
      POSTGRES_PASSWORD: finmda_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finmda_user -d finmda_bot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: finmda-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finmda-backend
    environment:
      - DATABASE_URL=postgresql://finmda_user:finmda_password@postgres:5432/finmda_bot
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_DB_PATH=/app/chromadb
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
      - backend_chromadb:/app/chromadb
      - backend_data:/app/data
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: finmda-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finmda-celery-worker
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://finmda_user:finmda_password@postgres:5432/finmda_bot
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_DB_PATH=/app/chromadb
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
      - backend_chromadb:/app/chromadb
      - backend_data:/app/data
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finmda-celery-beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://finmda_user:finmda_password@postgres:5432/finmda_bot
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_DB_PATH=/app/chromadb
    volumes:
      - ./backend:/app
      - backend_chromadb:/app/chromadb
      - backend_data:/app/data
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Flower for Celery Monitoring
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finmda-flower
    command: celery -A app.celery flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: finmda-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  backend_chromadb:
  backend_data:
  backend_logs:

networks:
  default:
    name: finmda-network
